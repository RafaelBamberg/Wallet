{"ast":null,"code":"import fetchApi from '../services/api';\nexport const SET_USERS = 'SET_USERS';\nexport const SET_EXPENSES = 'SET_EXPENSES';\nexport const GET_CURRENCY = 'GET_CURRENCY';\nexport const GET_CURRENCY_SUCCESS = 'GET_CURRENCY_SUCCESS';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const RENDER_COINS = 'RENDER_COINS';\nexport const storeUsers = payload => ({\n  type: SET_USERS,\n  payload\n});\nexport const renderCoins = payload => ({\n  type: RENDER_COINS,\n  payload\n});\nexport const deleteItem = item => ({\n  type: DELETE_ITEM,\n  item\n});\nexport const setExpenses = payload => ({\n  type: SET_EXPENSES,\n  payload\n});\nexport const getCurrency = () => ({\n  type: GET_CURRENCY\n});\nexport const getCurrencySuccess = payload => ({\n  type: GET_CURRENCY_SUCCESS,\n  payload\n});\nexport const getCurrencyThunk = expenses => async dispatch => {\n  const response = await fetchApi();\n\n  if (expenses !== undefined) {\n    const payload = { ...expenses,\n      exchangeRates: response\n    };\n    dispatch(setExpenses(payload));\n  } else {\n    dispatch(getCurrencySuccess(response));\n  }\n};","map":{"version":3,"sources":["/home/bamberg/Wallet/src/actions/index.js"],"names":["fetchApi","SET_USERS","SET_EXPENSES","GET_CURRENCY","GET_CURRENCY_SUCCESS","DELETE_ITEM","RENDER_COINS","storeUsers","payload","type","renderCoins","deleteItem","item","setExpenses","getCurrency","getCurrencySuccess","getCurrencyThunk","expenses","dispatch","response","undefined","exchangeRates"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB;AAEA,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,UAAU,GAAIC,OAAD,KACxB;AACEC,EAAAA,IAAI,EAAER,SADR;AACmBO,EAAAA;AADnB,CADwB,CAAnB;AAMP,OAAO,MAAME,WAAW,GAAIF,OAAD,KACzB;AACEC,EAAAA,IAAI,EAAEH,YADR;AACsBE,EAAAA;AADtB,CADyB,CAApB;AAMP,OAAO,MAAMG,UAAU,GAAIC,IAAD,KAAW;AACnCH,EAAAA,IAAI,EAAEJ,WAD6B;AAEnCO,EAAAA;AAFmC,CAAX,CAAnB;AAKP,OAAO,MAAMC,WAAW,GAAIL,OAAD,KACzB;AACEC,EAAAA,IAAI,EAAEP,YADR;AAEEM,EAAAA;AAFF,CADyB,CAApB;AAOP,OAAO,MAAMM,WAAW,GAAG,OAAO;AAChCL,EAAAA,IAAI,EAAEN;AAD0B,CAAP,CAApB;AAIP,OAAO,MAAMY,kBAAkB,GAAIP,OAAD,KAAc;AAC9CC,EAAAA,IAAI,EAAEL,oBADwC;AAE9CI,EAAAA;AAF8C,CAAd,CAA3B;AAKP,OAAO,MAAMQ,gBAAgB,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAChE,QAAMC,QAAQ,GAAG,MAAMnB,QAAQ,EAA/B;;AACA,MAAIiB,QAAQ,KAAKG,SAAjB,EAA4B;AAC1B,UAAMZ,OAAO,GAAG,EAAE,GAAGS,QAAL;AAAeI,MAAAA,aAAa,EAAEF;AAA9B,KAAhB;AACAD,IAAAA,QAAQ,CAACL,WAAW,CAACL,OAAD,CAAZ,CAAR;AACD,GAHD,MAGO;AACLU,IAAAA,QAAQ,CAACH,kBAAkB,CAACI,QAAD,CAAnB,CAAR;AACD;AACF,CARM","sourcesContent":["import fetchApi from '../services/api';\n\nexport const SET_USERS = 'SET_USERS';\nexport const SET_EXPENSES = 'SET_EXPENSES';\nexport const GET_CURRENCY = 'GET_CURRENCY';\nexport const GET_CURRENCY_SUCCESS = 'GET_CURRENCY_SUCCESS';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const RENDER_COINS = 'RENDER_COINS';\n\nexport const storeUsers = (payload) => (\n  {\n    type: SET_USERS, payload,\n  }\n);\n\nexport const renderCoins = (payload) => (\n  {\n    type: RENDER_COINS, payload,\n  }\n);\n\nexport const deleteItem = (item) => ({\n  type: DELETE_ITEM,\n  item,\n});\n\nexport const setExpenses = (payload) => (\n  {\n    type: SET_EXPENSES,\n    payload,\n  }\n);\n\nexport const getCurrency = () => ({\n  type: GET_CURRENCY,\n});\n\nexport const getCurrencySuccess = (payload) => ({\n  type: GET_CURRENCY_SUCCESS,\n  payload,\n});\n\nexport const getCurrencyThunk = (expenses) => async (dispatch) => {\n  const response = await fetchApi();\n  if (expenses !== undefined) {\n    const payload = { ...expenses, exchangeRates: response };\n    dispatch(setExpenses(payload));\n  } else {\n    dispatch(getCurrencySuccess(response));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}