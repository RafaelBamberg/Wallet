{"ast":null,"code":"import { SET_EXPENSES, GET_CURRENCY, GET_CURRENCY_SUCCESS, GET_CURRENCY_ERROR, DELETE_ITEM } from '../actions/index';\nconst INITIAL_STATE = {\n  currencies: {},\n  expenses: []\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_CURRENCY:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_EXPENSES:\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case GET_CURRENCY_SUCCESS:\n      return { ...state,\n        currencies: [action.payload]\n      };\n\n    case GET_CURRENCY_ERROR:\n      return { ...state,\n        error: action.payload.error\n      };\n\n    case DELETE_ITEM:\n      return { ...state,\n        expenses: state.expenses.filter(expense => expense !== action.item)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default walletReducer;","map":{"version":3,"sources":["/home/bamberg/sd-013-b-project-trybewallet/src/reducers/wallet.js"],"names":["SET_EXPENSES","GET_CURRENCY","GET_CURRENCY_SUCCESS","GET_CURRENCY_ERROR","DELETE_ITEM","INITIAL_STATE","currencies","expenses","walletReducer","state","action","type","loading","payload","error","filter","expense","item"],"mappings":"AAAA,SACEA,YADF,EAEEC,YAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAIsBC,WAJtB,QAKO,kBALP;AAOA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE;AAFU,CAAtB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKV,YAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AACLG,QAAAA,OAAO,EAAE;AADJ,OAAP;;AAGF,SAAKZ,YAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AACLF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACG,OAA3B;AADL,OAAP;;AAGF,SAAKX,oBAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AACLH,QAAAA,UAAU,EAAE,CAACI,MAAM,CAACG,OAAR;AADP,OAAP;;AAGF,SAAKV,kBAAL;AAEE,aAAO,EAAE,GAAGM,KAAL;AACLK,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OAAP,CAAeC;AADjB,OAAP;;AAGF,SAAKV,WAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AACLF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeQ,MAAf,CAAuBC,OAAD,IAAaA,OAAO,KAAKN,MAAM,CAACO,IAAtD;AADL,OAAP;;AAEF;AACE,aAAOR,KAAP;AAtBF;AAwBD,CAzBD;;AA0BA,eAAeD,aAAf","sourcesContent":["import {\n  SET_EXPENSES,\n  GET_CURRENCY,\n  GET_CURRENCY_SUCCESS,\n  GET_CURRENCY_ERROR, DELETE_ITEM,\n} from '../actions/index';\n\nconst INITIAL_STATE = {\n  currencies: {},\n  expenses: [],\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case GET_CURRENCY:\n    return { ...state,\n      loading: true,\n    };\n  case SET_EXPENSES:\n    return { ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case GET_CURRENCY_SUCCESS:\n    return { ...state,\n      currencies: [action.payload],\n    };\n  case GET_CURRENCY_ERROR:\n\n    return { ...state,\n      error: action.payload.error,\n    };\n  case DELETE_ITEM:\n    return { ...state,\n      expenses: state.expenses.filter((expense) => expense !== action.item) };\n  default:\n    return state;\n  }\n};\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}