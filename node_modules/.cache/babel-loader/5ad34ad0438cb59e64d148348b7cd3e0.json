{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/sd-013-b-project-trybewallet/src/pages/Header.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  render() {\n    const {\n      email,\n      expenses\n    } = this.props;\n    console.log(expenses);\n    let total = 0;\n    const {\n      newExpense\n    } = expenses;\n\n    if (newExpense.length !== 0) {\n      newExpense.forEach(element => {\n        total += Number(element.value * element.exchangeRates[element.currency].ask);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, email), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, total), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, \"BRL\")));\n  }\n\n}\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object)\n};\nHeader.defaultProps = {\n  expenses: []\n};\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies\n});\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/bamberg/sd-013-b-project-trybewallet/src/pages/Header.js"],"names":["React","Component","connect","PropTypes","Header","render","email","expenses","props","console","log","total","newExpense","length","forEach","element","Number","value","exchangeRates","currency","ask","propTypes","string","isRequired","arrayOf","object","defaultProps","mapStateToProps","state","user","wallet","currencies"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC7BI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAII,KAAK,GAAG,CAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAiBL,QAAvB;;AACA,QAAIK,UAAU,CAACC,MAAX,KAAsB,CAA1B,EAA6B;AAC3BD,MAAAA,UAAU,CAACE,OAAX,CAAoBC,OAAD,IAAa;AAC9BJ,QAAAA,KAAK,IAAIK,MAAM,CAACD,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,aAAR,CAAsBH,OAAO,CAACI,QAA9B,EAAwCC,GAAzD,CAAf;AACD,OAFD;AAGD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+Bd,KAA/B,CADF,eAEE;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BK,KAA9B,CAFF,eAGE;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF,CADF;AASD;;AApB4B;;AAuB/BP,MAAM,CAACiB,SAAP,GAAmB;AACjBf,EAAAA,KAAK,EAAEH,SAAS,CAACmB,MAAV,CAAiBC,UADP;AAEjBhB,EAAAA,QAAQ,EAAEJ,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B;AAFO,CAAnB;AAKArB,MAAM,CAACsB,YAAP,GAAsB;AACpBnB,EAAAA,QAAQ,EAAE;AADU,CAAtB;;AAIA,MAAMoB,eAAe,GAAIC,KAAD,KAAY;AAClCtB,EAAAA,KAAK,EAAEsB,KAAK,CAACC,IAAN,CAAWvB,KADgB;AAElCC,EAAAA,QAAQ,EAAEqB,KAAK,CAACE,MAAN,CAAavB,QAFW;AAGlCwB,EAAAA,UAAU,EAAEH,KAAK,CAACE,MAAN,CAAaC;AAHS,CAAZ,CAAxB;;AAKA,eAAe7B,OAAO,CAACyB,eAAD,CAAP,CAAyBvB,MAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  render() {\n    const { email, expenses } = this.props;\n    console.log(expenses);\n    let total = 0;\n    const { newExpense } = expenses;\n    if (newExpense.length !== 0) {\n      newExpense.forEach((element) => {\n        total += Number(element.value * element.exchangeRates[element.currency].ask);\n      });\n    }\n    return (\n      <div>\n        <header>\n          <p data-testid=\"email-field\">{ email }</p>\n          <p data-testid=\"total-field\">{total}</p>\n          <p data-testid=\"header-currency-field\">BRL</p>\n        </header>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object),\n};\n\nHeader.defaultProps = {\n  expenses: [],\n};\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n  currencies: state.wallet.currencies,\n});\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}