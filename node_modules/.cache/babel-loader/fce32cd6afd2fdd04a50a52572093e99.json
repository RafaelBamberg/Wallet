{"ast":null,"code":"var _jsxFileName = \"/home/bamberg/Wallet/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storeUsers } from '../actions/index';\nimport '../App.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({\n    target\n  }) {\n    const {\n      name\n    } = target;\n    this.setState({\n      [name]: target.value\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const {\n      history,\n      dispatchSetValue\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    dispatchSetValue(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    // https://stackoverflow.com/questions/16313741/how-to-validate-email-and-password-correctly-in-javascript\n    // https://www.w3resource.com/javascript/form/email-validation.php\n    //\n    const {\n      email,\n      password\n    } = this.state;\n    const PASSWORD_LENGTH = 6;\n    let valid = true;\n\n    if (email.includes('@' && '.com') && password.length >= PASSWORD_LENGTH) {\n      valid = false;\n    } else {\n      valid = true;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/home/bamberg/Wallet/imgs/669953_purse_dollars_finance_money_pay_icon.png\",\n      alt: \"walletIMG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      \"data-testid\": \"email-input\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      \"data-testid\": \"password-input\",\n      value: password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      disabled: valid,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nLogin.propTypes = {\n  dispatchSetValue: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  dispatchSetValue: value => dispatch(storeUsers(value))\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/bamberg/Wallet/src/pages/Login.js"],"names":["React","Component","PropTypes","connect","storeUsers","Login","constructor","state","email","password","handleChange","bind","handleClick","target","name","setState","value","event","preventDefault","history","dispatchSetValue","props","push","render","PASSWORD_LENGTH","valid","includes","length","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { storeUsers } from '../actions/index';\nimport '../App.css'\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange({ target }) {\n    const { name } = target;\n    this.setState({\n      [name]: target.value,\n    });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    const { history, dispatchSetValue } = this.props;\n    const { email } = this.state;\n    dispatchSetValue(email);\n    history.push('/carteira');\n  }\n\n  render() {\n    // https://stackoverflow.com/questions/16313741/how-to-validate-email-and-password-correctly-in-javascript\n    // https://www.w3resource.com/javascript/form/email-validation.php\n    //\n    const { email, password } = this.state;\n    const PASSWORD_LENGTH = 6;\n    let valid = true;\n    if (email.includes('@' && '.com') && password.length >= PASSWORD_LENGTH) {\n      valid = false;\n    } else {\n      valid = true;\n    }\n\n    return (\n      <div className='login'>\n        <img src='/home/bamberg/Wallet/imgs/669953_purse_dollars_finance_money_pay_icon.png' alt='walletIMG'/>\n        <form>\n          <input\n            type=\"email\"\n            name=\"email\"\n            data-testid=\"email-input\"\n            value={ email }\n            onChange={ this.handleChange }\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            data-testid=\"password-input\"\n            value={ password }\n            onChange={ this.handleChange }\n          />\n          <button\n            onClick={ this.handleClick }\n            disabled={ valid }\n            type=\"submit\"\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatchSetValue: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchSetValue: (value) => dispatch(storeUsers(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}